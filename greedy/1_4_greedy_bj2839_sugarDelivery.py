'''
백준 2839 - 설탕 배달

문제
상근이는 요즘 설탕공장에서 설탕을 배달하고 있다. 상근이는 지금 사탕가게에 설탕을 정확하게 N킬로그램을 배달해야 한다. 설탕공장에서 만드는 설탕은 봉지에 담겨져 있다. 봉지는 3킬로그램 봉지와 5킬로그램 봉지가 있다.

상근이는 귀찮기 때문에, 최대한 적은 봉지를 들고 가려고 한다. 예를 들어, 18킬로그램 설탕을 배달해야 할 때, 3킬로그램 봉지 6개를 가져가도 되지만, 5킬로그램 3개와 3킬로그램 1개를 배달하면, 더 적은 개수의 봉지를 배달할 수 있다.

상근이가 설탕을 정확하게 N킬로그램 배달해야 할 때, 봉지 몇 개를 가져가면 되는지 그 수를 구하는 프로그램을 작성하시오.

입력
첫째 줄에 N이 주어진다. (3 ≤ N ≤ 5000)

출력
상근이가 배달하는 봉지의 최소 개수를 출력한다. 만약, 정확하게 N킬로그램을 만들 수 없다면 -1을 출력한다.

주소: https://www.acmicpc.net/problem/2839
'''

'''
w = int(input())

li = [5, 3]

answer = []

# 3이나 5로 나누어 떨어지는 경우의 설탕봉지 개수를 구한다.
if w % li[0] == 0:
    answer.append(w // li[0])

elif w % li[1] == 0:
    answer.append(w // li[1])

tmp = 0

for i in li:
    cnt = 0
    cnt += w // i
    w -= i * cnt
    tmp += cnt

    if w == 0:
        break

if w != 0:
    tmp = -1

answer.append(tmp)

if -1 in answer and len(answer) > 1:
    answer.remove(-1)

print(min(answer))
'''

'''
부끄럽지만 문제가 많은 코드...
처음에는 거스름돈 문제를 생각해 5kg 봉지를 다 뺀 후 나머지 3kg으로 빼면 해결이 될 줄 알았다.
하지만 거스름돈 문제와는 다르게 봉지들이 서로 배수, 약수 관계를 가지는게 아니기 때문에 성립하지 않는다.
다르게 생각해보자...
'''

# 방법 2
# 3, 5kg 봉지의 조합으로 원하는 무게를 모두 챙길 수 있다면, 5kg 봉투를 최대한 챙기는게 봉투의 개수를 줄일 수 있을 것이다.
# 최대한 큰 5의 배수까지 3으로 뺀 후 나머지는 모두 5kg 봉지로 챙기는 것이다.
# 물론 3, 5kg의 봉지들로 뺄 수 없을 경우 예외처리를 해야할 것이다.

w = int(input())

answer = 0
while w > 0:
    if w % 5 == 0:
        answer += w // 5
        w = 0
        break
    w -= 3
    answer += 1

if w != 0:
    answer = -1

print(answer)
